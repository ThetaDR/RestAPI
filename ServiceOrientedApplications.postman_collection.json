{
	"info": {
		"_postman_id": "95dbe3ac-2569-4058-b7c9-1408b4b8ed75",
		"name": "ServiceOrientedApplications",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Ping",
			"item": [
				{
					"name": "ping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8000/ping",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"ping"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "login & register",
			"item": [
				{
					"name": "register user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response must be valid and have a body\", function () {",
									"    pm.response.to.have.status(200);",
									"    // pm.expect(pm.response.code).to.equal(404);",
									"    //  pm.response.to.be.ok;",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"",
									"// set env variables for comming tests",
									"if (pm.response.to.have.status(200)) {",
									"    //  pm.environment.set(\"username\", pm.response.json().username);",
									"    let req = JSON.parse(pm.request.body.raw);",
									"    pm.environment.set(\"username\", req.username);",
									"    pm.environment.set(\"password\", req.password);",
									"   // pm.collectionVariables.set(\"username\", req.username);",
									"   // pm.collectionVariables.set(\"password\", req.password);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//postman.setNextRequest('get image minio')",
									"postman.setNextRequest('login user')",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"user11111\", \"password\": \"password1234\", \"scope\": \"user\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8000/auth/register",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "register admin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"admin\", \"password\": \"admin_password\", \"scope\": \"admin\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8000/auth/register",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"const updatedBody = {",
									"        \"username\": pm.environment.get(\"username\"),",
									"        \"password\": pm.environment.get(\"password\")",
									"    }",
									"",
									"pm.test(\"can login with fresh registered user\", () => {",
									"    pm.sendRequest({",
									"        url: 'http://0.0.0.0:8000/auth/login',",
									"        method: 'POST',",
									"        body: {",
									"            mode: \"raw\",",
									"            raw: updatedBody,",
									"            options: {",
									"                    raw: {",
									"                    language: \"json\"",
									"                            }",
									"                    }",
									"        }",
									"    }, function (err, res) {",
									"        pm.expect(res).to.have.property('code', 200);",
									"          if (pm.response.to.have.status(200)) {",
									"           let resBody = JSON.parse(new Buffer.from(res.stream).toString());",
									"           pm.collectionVariables.set(\"TOKEN-USER1\", \"Bearer \"+resBody.token); ",
									"           //console.log(pm.collectionVariables.get(\"TOKEN-USER1\"));",
									"        }",
									"    }) ",
									"",
									"  ",
									"});",
									"",
									"",
									"const failBody = {",
									"        \"username\": \"notregistered\",",
									"        \"password\": \"do not exist\"",
									"    }",
									"",
									"pm.test(\"can login with fresh registered user\", () => {",
									"    pm.sendRequest({",
									"        url: 'http://0.0.0.0:8000/auth/login',",
									"        method: 'POST',",
									"        body: {",
									"            mode: \"raw\",",
									"            raw: failBody,",
									"            options: {",
									"                    raw: {",
									"                    language: \"json\"",
									"                            }",
									"                    }",
									"        }",
									"    }, function (err, res) {",
									"        pm.expect(res).to.have.property('code', 401);",
									"    }) ",
									"});",
									"*/",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setNextRequest('get image minio')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"{{username}}\", \"password\": \"{{password}}\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8000/auth/login",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login admin",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"admin\", \"password\": \"admin_password\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8000/auth/login",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login GitHub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8000/auth/github",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"auth",
								"github"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://0.0.0.0:8000/auth/logout",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "csc",
			"item": [
				{
					"name": "csc login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"newUser\", \"password\": \"test_password\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://api.imager.local/auth/login",
							"protocol": "http",
							"host": [
								"api",
								"imager",
								"local"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "csc register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"username\": \"newUser\", \"password\": \"test_password\", \"role\": \"user\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://api.imager.local/auth/register",
							"protocol": "http",
							"host": [
								"api",
								"imager",
								"local"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "csc ping",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://api.imager.local/ping",
							"protocol": "http",
							"host": [
								"api",
								"imager",
								"local"
							],
							"path": [
								"ping"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "image",
			"item": [
				{
					"name": "get image minio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setNextRequest('post image db')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://0.0.0.0:8000/image/minio",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"image",
								"minio"
							]
						}
					},
					"response": []
				},
				{
					"name": "get image db",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://0.0.0.0:8000/image?limit=10&page=1",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"image"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "post image minio",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"imagedata\" :\n    \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8000/image/minio",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"image",
								"minio"
							]
						}
					},
					"response": []
				},
				{
					"name": "post image db",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"postman.setNextRequest('all images from me')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://0.0.0.0:8000/image",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"image"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete image",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://0.0.0.0:8000/image/d37d122f-b9d9-4a36-81c7-d21f0b5f147e",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"image",
								"d37d122f-b9d9-4a36-81c7-d21f0b5f147e"
							]
						}
					},
					"response": []
				},
				{
					"name": "report an image",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://0.0.0.0:8000/image/29fd0e00-5369-4bd5-b6ca-24db6fe106b0/report",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"image",
								"29fd0e00-5369-4bd5-b6ca-24db6fe106b0",
								"report"
							]
						}
					},
					"response": []
				},
				{
					"name": "upvote",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://0.0.0.0:8000/image/27e13a3a-fb4f-492d-9d5a-9f78976563b4/downvote",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"image",
								"27e13a3a-fb4f-492d-9d5a-9f78976563b4",
								"downvote"
							]
						}
					},
					"response": []
				},
				{
					"name": "downvote",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiMWQ1ZTQ5YzEtNjQxZC00MTI0LWI2ZjEtYjliNGY0NTk4ZTI2IiwibmFtZSI6ImFkbWluIn0sInNjb3BlIjpbImFkbWluIl0sImlhdCI6MTYyMDIwNDE4Nn0.S_bUZ6LOYokOgvOz6MQvRl_iCxnmEZpIKHTAf7aCKj0",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8000/image/27e13a3a-fb4f-492d-9d5a-9f78976563b4/downvote",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"image",
								"27e13a3a-fb4f-492d-9d5a-9f78976563b4",
								"downvote"
							]
						}
					},
					"response": []
				},
				{
					"name": "trending",
					"request": {
						"method": "GET",
						"header": [],
						"url": null
					},
					"response": []
				}
			]
		},
		{
			"name": "me",
			"item": [
				{
					"name": "get me",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text",
								"description": "Use this if you want to be an admin",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://0.0.0.0:8000/me",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "all images from me",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://0.0.0.0:8000/me",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"me"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "admin",
			"item": [
				{
					"name": "list all notice",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://0.0.0.0:8000/admin/notice",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"admin",
								"notice"
							]
						}
					},
					"response": []
				},
				{
					"name": "list all users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://0.0.0.0:8000/admin/user",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"admin",
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Favorite",
			"item": [
				{
					"name": "create/add favorite",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://0.0.0.0:8000/image/:id/favorite",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"image",
								":id",
								"favorite"
							],
							"variable": [
								{
									"key": "id",
									"value": "b3aee816-ef7e-498c-858e-a4d1f3597949"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "my favorites",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://0.0.0.0:8000/me/favorites",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"me",
								"favorites"
							]
						}
					},
					"response": []
				},
				{
					"name": "remove from favorites",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://0.0.0.0:8000/image/:id/favorite",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"image",
								":id",
								"favorite"
							],
							"variable": [
								{
									"key": "id",
									"value": "f41871e1-b434-43b5-a663-eda41e23a61e"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "get all comments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://0.0.0.0:8000/comments",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "add comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"comment\": \"test comment just to check if it works\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8000/image/48a0aa34-6626-44ff-a10c-7ea9236caf0d/comment",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"image",
								"48a0aa34-6626-44ff-a10c-7ea9236caf0d",
								"comment"
							]
						}
					},
					"response": []
				},
				{
					"name": "update comment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"comment\": \"CHANGED COMMENT\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8000/comment/fe882de1-4b9a-4ecb-823a-3c044218cf09",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"comment",
								"fe882de1-4b9a-4ecb-823a-3c044218cf09"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete comment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{ADMIN}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER1}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{TOKEN-USER2}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://0.0.0.0:8000/comment/",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8000",
							"path": [
								"comment",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "TOKEN-USER1",
			"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiYmUzYjFhZjMtMTM1Ny00YTk0LWI1YjktNzE3NzkwZTc3OWQ1IiwibmFtZSI6InVzZXIxIn0sInNjb3BlIjpbInVzZXIiXSwiaWF0IjoxNjE4NzcwMzA4fQ.RVUU3i-8xg9cvyLmcgUWdzG8sEPT3hLAC4rcQJBpnhs"
		},
		{
			"key": "TOKEN-USER2",
			"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiOTA0NDRjMDYtN2ViZC00MWFjLWJiYTItNWVkM2FkMTVmZDczIiwibmFtZSI6InVzZXIyIn0sInNjb3BlIjpbInVzZXIiXSwiaWF0IjoxNjE4NzcwMzMxfQ.wuIBRZGFsq1jufIagnYxAq5G2SJT4-zw5eHhjh5pROM"
		},
		{
			"key": "ADMIN",
			"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiYjdkOWYwM2UtNGRkZC00OGE3LWJkMWMtYmQ2MTA1NzM2YmE5IiwibmFtZSI6ImFkbWluIn0sInNjb3BlIjpbImFkbWluIl0sImlhdCI6MTYxODc3MDI4NH0.hGo_rE-lR3VC3DMbkZw5jYwyiT67ewISo0pWoYsxTSg"
		}
	]
}
